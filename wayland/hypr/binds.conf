# Here is the official documentation:
# 	<https://wiki.hyprland.org/Configuring/Binds/>
# 	This can be leveraged to control external programs, like e.g. OBS: <https://wiki.hyprland.org/Configuring/Binds/#global-keybinds>

$mainMod = SUPER

# NOTE: when I configured wezterm on 2024-06-26, wezterm had a bug that its window
#       didn't appear on hyprland, with no errors. So, I decided to download
#       a nightly build from https://wezfurlong.org/wezterm/install/linux.html#__tabbed_1_9,
#       which is at ~/bin. Then, I syslinked its' binaries to /usr/bin.

# Reload
# bind = $mainMod, R, exec, hyprctl reload && notify-send 'hyprland reloaded from config'
bind = $mainMod, R, exec, ~/scripts/wayland-reload.sh

# Volume
bind = ALT, Up, exec, wpctl set-volume -l 1.4 @DEFAULT_AUDIO_SINK@ 5%+
bind = ALT, Down, exec, wpctl set-volume -l 1.4 @DEFAULT_AUDIO_SINK@ 5%-
bind = ALT, m, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle

bind = $mainMod, Return, exec, wezterm start --always-new-process
bind = $mainMod SHIFT, Return, exec, kitty
bind = $mainMod, Backspace, killactive,
bind = $mainMod, Q, exit,
bind = $mainMod, G, togglefloating,
bind = $mainMod, F, fullscreen,
bind = $mainMod, K, fakefullscreen,
bind = $mainMod, E, exec, wofi --show drun --show-icons
bind = $mainMod, C, exec, cliphist list | wofi --show dmenu | cliphist decode | wl-copy
bind = $mainMod, U, exec, swaync-client -t -sw
bind = $mainMod, V, exec, pypr toggle volume
bind = $mainMod, S, exec, pypr toggle terminal
bind = $mainMod, Z, exec, ~/scripts/powermenu-hypr.sh
# bind = $mainMod, S, exec, ~/scripts/terminal-scratchpad.sh
# bind = $mainMod, D, pseudo, # dwindle
# bind = $mainMod, S, togglesplit, # dwindle

# below starts the wezterm scratchpad
# bind = $mainMod, A, exec, ~/scripts/terminal-scratchpad.sh

# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace (and switch to it)
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Move active window to a workspace (and DO NOT switch to it)
bind = $mainMod ALT, 1, movetoworkspacesilent, 1
bind = $mainMod ALT, 2, movetoworkspacesilent, 2
bind = $mainMod ALT, 3, movetoworkspacesilent, 3
bind = $mainMod ALT, 4, movetoworkspacesilent, 4
bind = $mainMod ALT, 5, movetoworkspacesilent, 5
bind = $mainMod ALT, 6, movetoworkspacesilent, 6
bind = $mainMod ALT, 7, movetoworkspacesilent, 7
bind = $mainMod ALT, 8, movetoworkspacesilent, 8
bind = $mainMod ALT, 9, movetoworkspacesilent, 9
bind = $mainMod ALT, 0, movetoworkspacesilent, 10
bind = $mainMod SHIFT, S, movetoworkspacesilent, special
bind = $mainMod CTRL, S, togglespecialworkspace

# TODO: move all windows on a workspace to another

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# sway-osd (volume, brightness and CAPS LOCK)
# TODO: change below to hyprland bindings

# (Notes on using --device: It is for audio devices only.)
# # Sink volume raise optionally with --device
# swayosd-client --output-volume raise
# # Sink volume lower optionally with --device
# swayosd-client --output-volume lower --device alsa_output.pci-0000_11_00.4.analog-stereo.monitor
# # Sink volume toggle mute
# swayosd-client --output-volume mute-toggle
# # Source volume toggle mute
# swayosd-client --input-volume mute-toggle
# # Volume raise with custom value
# swayosd-client --output-volume 15
# # Volume lower with custom value
# swayosd-client --output-volume -15
# # Volume raise with max value
# swayosd-client --output-volume raise --max-volume 120
# # Volume lower with max value
# swayosd-client --output-volume lower --max-volume 120
# # Sink volume raise with custom value optionally with --device
# swayosd-client --output-volume +10 --device alsa_output.pci-0000_11_00.4.analog-stereo.monitor
# # Sink volume lower with custom value optionally with --device
# swayosd-client --output-volume -10 --device alsa_output.pci-0000_11_00.4.analog-stereo.monitor
# # Capslock (If you don't want to use the backend)
# swayosd-client --caps-lock
# # Capslock but specific LED name (/sys/class/leds/)
# swayosd-client --caps-lock-led input19::capslock
# # Brightness raise
# swayosd-client --brightness raise
# # Brightness lower
# swayosd-client --brightness lower
# # Brightness raise with custom value('+' sign needed)
# swayosd-client --brightness +10
# # Brightness lower with custom value('-' sign needed)
# swayosd-client --brightness -10
