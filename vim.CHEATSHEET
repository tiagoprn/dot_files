    ## KEY MAPPINGS

    ## SELECT A WHOLE LINE:
    (VISUAL) V
    OBS.: keep selecting with the arrow keys you can select multiple lines as a whole

    ## SELECT WHAT IS IN QUOTES ON THE CURRENT LINE
    (works with "[}(" also)
        (VISUAL) norm 0yi"  # go to beginning of line (0), (y)ank what is (i)n double quotes

    ## BATCH DELETE OF LINES:
        From an interval of lines: (VISUAL) :5,50d
	    From the current line on, delete the next 100k lines: (VISUAL) :.,+100000d

    ## BATCH COPY OF LINES:
        From an interval of lines: (VISUAL) :5,50y
	    From the current line on, copy the next 100k lines: (VISUAL) :.,+100000y

    ## DELETE UNTIL END OF LINE:
	    (VISUAL) d$

    ## DELETE UNTIL BEGINNING OF LINE:
        (VISUAL) d0

    ## NAVIGATION (VISUAL MODE)
        Go to next word: <w>
        Go to the end of a word: <e>
        Go to previous word: <b>
        Jump to a matching opening or closing parenthesis, square bracket or a curly brace: <%>

        ### MOVE TO THE START OF THE LINE:
            (VISUAL) 0

        ### MOVE TO THE END OF THE LINE:
            (VISUAL) $

        ### MOVE TO THE START OF THE LINE AND ENTER INSERT MODE:
            (VISUAL) I

        ### MOVE TO THE END OF THE LINE AND ENTER INSERT MODE:
            (VISUAL) A

        ### JOIN 2 lines:
            (VISUAL) J

        ### MOVE TO THE BEGINNING OF THE FILE:
            (VISUAL) gg

        ### MOVE TO THE END OF THE FILE:
            (VISUAL) G

        ### MOVE TO THE END OF THE FILE AND ENTER INSERT MODE:
            (VISUAL) GA

    ## SEARCH / REPLACE
        - Search for current word on the cursor (visual mode):
            Forwards: (VISUAL) *
            Backwards: (VISUAL) #
        - Search / Replace
            (VISUAL) :%s/search/replace/g[ic]
                %s = on the whole file
                g = all ocurrences in the line
                i = case insensitive
                c = confirm each match

    ## HISTORY:
        List of past commands (hitting <Enter> you can execute them):
            (VISUAL) q:

    ## READ THE OUTPUT FROM A COMMAND ON THE CURRENT BUFFER:
        (VISUAL) read ![command]

    ## RUN A NORMAL MODE COMMAND ON MULTIPLE LINES:
        (VISUAL) norm Iline  # goes to the beginning of a line and enter INSERT mode, type line
        (VISUAL) norm Aend   # goes to the end of a line and enter INSERT mode, type end
        NOTES:
            - This can be done with many lines selected (with V), then :norm A... to edit multiple lines.
            - You can run any normal mode command you wish, but if you use I and A you will enter INSERT mode.

    ## SORT LINES ALPHABETICALLY
    Select the lines, then `:sort`.

    ## Record a macro:
    ```
    q<letter><commands>q
    ```

    - To execute the macro <number> times (once by default), type:

        ```
        <number-of-times>@<letter>
        ```

    - So, the complete process looks like:

    ```
    qa      - start recording to register a
    ...	    - your complex series of commands
    q	    - stop recording
    @a	    - execute your macro
    @@	    - execute your macro again
    99@a    - execute your macro 99 times
    ```

    ## Script vim commands
    $ vim --cmd 'echo "This runs before .vimrc"' -c ':call UltiSnips#ListSnippets()' -c '<Esc>' -c ':q!'
    $ vim -c ':call UltiSnips#ListSnippets()' -c ':q!'
    $ vim +PluginInstall +qall

# All vim script events:
:h events

