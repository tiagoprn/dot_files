[user]
	email = tiagoprn@gmail.com
    name = tiago.paranhos

[alias]
  # Because I constantly forget how to do this
  # https://git-scm.com/docs/git-fetch#git-fetch--p
  prune = fetch --prune

  # Not quite as common as an amend, but still common
  # https://git-scm.com/docs/git-reset#git-reset-emgitresetemltmodegtltcommitgt
  undo = reset --soft HEAD^

  # We wanna grab those pesky un-added files!
  # https://git-scm.com/docs/git-stash
  stash-all = stash save --include-untracked

  glog = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'

  ll = log --graph --format=format:\"%C(yellow)%h%C(red)%d%C(reset) - %C(bold green)(%ar)%C(reset) %s %C(blue)<%an>%C(reset)\"

  files-changed = log --name-status

  # What this will do, is sort the files in your project by their number of changes, and take the
  # first 10. Those are the ones where most changes have occurred over time, consequently there is
  # a higher chance ztat those will require the most changes in the future.
  code-changes-rank = "!git log --name-only | grep -v 'Author' |  grep -v '^$' | sort | uniq -c | sort -rg | head -10"
  rank = "!git code-changes-rank"

  # list branches, with the most recent one on top
  lb = !git reflog show --pretty=format:'%gs ~ %gd' --date=relative | grep 'checkout:' | grep -oE '[^ ]+ ~ .*' | awk -F~ '!seen[$1]++' | head -n 10 | awk -F' ~ HEAD@{' '{printf(\"  \\033[33m%s: \\033[37m %s\\033[0m\\n\", substr($2, 1, length($2)-1), $1)}'

[status]
  showUntrackedFiles = all
  # Sometimes a newly-added folder, since it's only one line in git status, can slip under the radar.
  # https://git-scm.com/docs/git-config#git-config-statusshowUntrackedFiles

[transfer]
  fsckobjects = true
  # To combat repository corruption!
  # Note: this global option applies during receive and transmit
  # https://git-scm.com/docs/git-config#git-config-transferfsckObjects
  # via https://groups.google.com/forum/#!topic/binary-transparency/f-BI4o8HZW0


# A nice little github-like colorful, split diff right in the console.
# via http://owen.cymru/github-style-diff-in-terminal-with-icdiff/
[diff]
  tool = icdiff
[difftool]
  prompt = false
[difftool "icdiff"]
cmd = /usr/bin/icdiff --line-numbers $LOCAL $REMOTE
[core]
	excludesfile = /home/tiago/.gitignore.global
