
snippet header
	#!/bin/bash

snippet exit_success
	exit 0

snippet if_then
	if [ ${1:condition} ] ; then
		#statements
	else
		#statements
	fi

snippet exit_check_from_previous_command
	if [ $? -ne 0 ] ; then
		echo "FAILURE :("
	else
		echo "SUCCESS o/"
	fi

snippet notify-send
	notify-send ${1:text} -t ${2:timeout} -u ${3:level}

snippet notify-send-formatted
	"${1:text} <br> <b> ${2:bold-text} </b>"

snippet command_stdout
	${1:VAR}=$(${2:command })

snippet redirect_logging_to_journalctl
	2>&1

snippet run_until_success

	while true; do
		${1:command} && exit
	done

snippet directory_not_exists
	if [ ! -d "${1:path}" ]
	then
		#statements
	fi

snippet file_not_exists
	if [ ! -f "${1:path}" ]
	then
		#statements
	fi

snippet iterate_on_directories
	DIRECTORIES="${1:dir1} ${2:dir2}"
	for directory in $DIRECTORIES; do
		echo "directory: $directory";
		ls $directory
	done

snippet iterate_on_files_on_directory
	find ${1:directory} -name "*" | while read fname; do
		echo "on: $(date +%Y%m%d_%H%M%S), found: $fname"
	done

snippet command_on_infinite_loop
	while true ; ${1:command} ; sleep 5 ; done

snippet current_timestamp
	$(date +%Y%m%d_%H%M%S)

snippet cli_args
	#!/bin/bash

	SYNTAX="./${1:script_name}.sh -${2:a} VALUE -${4:b} VALUE"

	while getopts $2:$4: option
	do
		case "${option}"
		in
			$2) ${3:ARG1_VAR}=${OPTARG};;
			$4) ${5:ARG2_VAR}=${OPTARG};;
		esac
	done

	echo 'Parsing script parameters...'
	if [[ -z $$3 ]]; then
		printf "Missing -$2 parameter. Syntax: \n\n$SYNTAX\n";
		exit 1
	fi

	if [[ -z $$5 ]]; then
		printf "Missing -$4 parameter. Syntax: \n\n$SYNTAX\n";
		exit 1
	fi

	echo 'Script parameters validation finished.'

	#statements
