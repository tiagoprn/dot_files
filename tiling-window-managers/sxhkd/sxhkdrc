# --- NOTES ---

# To run the program
# $ sxhkd -c /storage/src/dot_files/sxhkd/sxhkdrc

# rofi: run app, show windows
# super + r; {space,Tab}
#	rofi -show {drun -drun-icon-theme,window -drun-icon-theme}

# --- SHORTCUTS ---

## WM independent

# qutebrowser:
alt + b
	flatpak run --filesystem=host org.qutebrowser.qutebrowser -B $HOME/.local/share/qutebrowser/personal -C $HOME/.local/share/qutebrowser/personal/config/config.py

# customize caps lock:
alt + c
	$HOME/apps/scripts/bin/customize_capslock.sh

# htop:
alt + h
	urxvt -name htop -title htop --hold -e htop

# toggle keyboards:
alt + k
	$HOME/apps/scripts/rofi/toggle_keyboards.py

# toggle compositor:
alt + o
	$HOME/apps/scripts/bin/toggle_compositor.sh

# launch snippets:
alt + s
	$HOME/apps/scripts/rofi/snippets.sh

# qutebrowser - work mode:
alt + shift + b
	flatpak run --filesystem=host org.qutebrowser.qutebrowser -B $HOME/.local/share/qutebrowser/work/dafiti -C $HOME/.local/share/qutebrowser/work/dafiti/config/config.py

# playerctl toggle play / pause:
alt + space
	playerctl play-pause && kill -44 $(pidof dwmblocks)

# pavucontrol:
alt + v
	pavucontrol

# decrease screen brightness:
alt + shift + down
	xbacklight -dec 20

# decrease sound volume:
alt + down
	pactl set-sink-volume $(pacmd list-sinks + grep index + sed 's/: /:/g'+ cut -d ':' -f 2) -5% && kill -44 $(pidof dwmblocks)

# dmenu apps:
super + shift + e
	dmenu_run

# dmenu launcher:
super + shift + l
	$HOME/apps/scripts/bin/dmlauncher.sh

# dunst notifications menu:
super + u
	$HOME/apps/scripts/bin/dmdunst-menu.sh

# echo keys typed on screen:
alt + n
	killall screenkey ++ screenkey &

# increase screen brightness:
alt + shift + up
	xbacklight -inc 20

# increase sound volume:
alt + up
	pactl set-sink-volume $(pacmd list-sinks + grep index + sed 's/: /:/g'+ cut -d ':' -f 2) +5% && kill -44 $(pidof dwmblocks)

# mute/unmute sound volume:
alt + shift + 8
	pactl set-sink-mute $(pacmd list-sink-inputs + grep -c index) toggle && kill -44 $(pidof dwmblocks)

# playerctl next:
alt + right
	playerctl next && kill -44 $(pidof dwmblocks)

# playerctl previous:
alt + left
	playerctl previous && kill -44 $(pidof dwmblocks)

# rofi app menu:
super + e
	rofi -show drun -drun-icon-theme

# rofi shutdown menu:
super + z
	$HOME/apps/scripts/rofi/shutdown.py

# styli.sh random wallpaper:
alt + shift + w
	/opt/styli.sh/styli.sh -l reddit

# clippy clipboard:
super + c
	clippy_rofi.py

# cheatsheets menu:
super + d
 	$HOME/apps/scripts/bin/dmcheatsheets-menu.sh

# reload wallpaper:
super + m
	arandr && reload_wallpaper.sh

# terminal:
super + Return
	$HOME/apps/scripts/bin/terminal.sh

# bookmarks:
super + shift + b
	$HOME/apps/scripts/rofi/bookmarks.py

# screenshot - region:
super + shift + p
	$HOME/apps/scripts/bin/screenshot.py -s region

# terminal - tmux:
super + shift + Return
	$HOME/apps/scripts/bin/terminal-tmux.sh

# passwords - rofi:
super + w
	$HOME/apps/scripts/bin/pass-rofi.sh

# toggle systray (stalonetray):
super + t
	$HOME/apps/scripts/bin/toggle-stalonetray.sh

# vim edit text field:
alt + e
	$HOME/apps/scripts/bin/vedit.sh

# wallpaper (m to mark):
alt + w
	sxiv -r -q -o $(ls -t --color=never $HOME/Wallpapers/*) + xargs feh --bg-scale

## WM specific

### bspwm

# scratchpad - dropdownterm:
alt + t
	# TODO

# scratchpad - nnn:
super + r
	# TODO

# scratchpad - pcmanfm:
super + shift + r
	# TODO

# [quit,restart] bspwm:
super + alt + {q,r}
	bspc {quit,wm -r}

# close and kill:
super + backspace
	bspc node -c

# alternate between the tiled and monocle layout:
super + bracketleft
	bspc desktop -l next

# send the newest marked node to the newest preselected node:
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest window:
super + g
	bspc node -s biggest.window

# set the window state [tiled,pseudo_tiled,floating,fullscreen]:
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags [marked,locked,sticky,private]:
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

# focus the node [f,s] in the given direction [west,south,north,east]:
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump [parent,brother,first,second]:
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the [next,previous] window in the current desktop:
super + {_,shift + }c
	bspc node -f {next,prev}.local.!hidden.window

# focus the [next,previous] desktop in the current monitor:
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last [node,desktop]:
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the [older,newer] node in the focus history:
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given [desktop,node] [0-9]:
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

# preselect the direction [west,south,north,east]:
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio [1-9]:
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node:
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop:
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

# expand a window by moving one of its side outward [left,bottom,top,right]:
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward [right,top,bottom,left]:
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window [Left,Down,Up,Right]:
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

