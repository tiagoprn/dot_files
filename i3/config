# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

default_orientation horizontal

# Pressing the same workspace shortcut goes to the previous one
workspace_auto_back_and_forth no

set $mod Mod4
set $black #101218
set $darkgrey #383838
set $darkviolet #252936
set $palidblue #7780a1
set $lightgrey #C0C5CE
set $lightergrey #d1d4e0
set $mediumgrey #C9CCDB
set $white #ffffff
set $darkred #c72e35
set $red #ff0000
set $lightsalmon #f99170
set $palidyellow #ffefcc
set $poolblue #a5ffe1
set $lightblue #97e0ff
set $paleblue #97bbf7
set $lightviolet #c0b7f9
set $pitchblack #000000
set $bluesky #4845da
set $blue #0000ff

# set $font_family Source Sans Pro Semibold
set $font_family Ubuntu
set $font_size 10.5

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8
# font pango:Inconsolata Awesome 14
font pango: $font_family $font_size

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec --no-startup-id kitty
bindsym $mod+Shift+Return exec --no-startup-id kitty --hold bash -c "TERM=screen-256color /storage/src/devops/bin/start_random_tmux_session_name.sh"

bindsym Mod1+Return exec --no-startup-id '/storage/src/devops/bin/urxvt-terminal.sh'

# kill focused window
bindsym $mod+k kill

# program launcher
# below lists all binary executable files
bindsym $mod+d exec --no-startup-id rofi -show run
# below lists just apps with .desktop files
bindsym $mod+space exec --no-startup-id rofi -show drun -drun-icon-theme

# Window management

## change focus
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

## move focused window
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

## swap window without changing container layout
bindsym $mod+Ctrl+Right mark _last; focus right; swap with mark "_last"; unmark _last; focus right
bindsym $mod+Ctrl+Left mark _last; focus left; swap with mark "_last"; unmark _last; focus left
bindsym $mod+Ctrl+Up mark _last; focus up; swap with mark "_last"; unmark _last; focus up
bindsym $mod+Ctrl+Down mark _last; focus down; swap with mark "_last"; unmark _last; focus down

# alt-tab to quickly switch between windows
bindsym Mod1+Tab exec --no-startup-id rofi -show window -drun-icon-theme

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container/window
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+Shift+k layout stacking
bindsym $mod+Shift+t layout tabbed
bindsym $mod+Shift+s layout toggle split
# toggle tiling / floating
bindsym $mod+Shift+f floating toggle

# change focus between tiling / floating windows
# bindsym $mod+space focus mode_toggle

# focus the parent container
# bindsym $mod+p focus parent

# focus the child container
# bindsym $mod+c focus child

set $workspace1 " 1:Personal"
set $workspace2 " 2:Firefox"
set $workspace3 " 3:Chrome"
set $workspace4 " 4:Planning"
set $workspace5 " 5:etc0"
set $workspace6 " 6:Work"
set $workspace7 " 7:Settings"
set $workspace8 " 8:etc1"
set $workspace9 " 9:etc2"
set $workspace10 " 0:Dashboard"

# switch to workspace
bindsym $mod+1 workspace $workspace1; bar mode dock
bindsym $mod+2 workspace $workspace2; bar mode dock
bindsym $mod+3 workspace $workspace3; bar mode dock
bindsym $mod+4 workspace $workspace4; bar mode dock
bindsym $mod+5 workspace $workspace5; bar mode dock
# bindsym $mod+5 workspace $workspace5; bar mode hide
bindsym $mod+6 workspace $workspace6; bar mode dock
bindsym $mod+7 workspace $workspace7; bar mode dock
bindsym $mod+8 workspace $workspace8; bar mode dock
bindsym $mod+9 workspace $workspace9; bar mode dock
bindsym $mod+0 workspace $workspace10; bar mode dock

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $workspace1
bindsym $mod+Shift+2 move container to workspace $workspace2
bindsym $mod+Shift+3 move container to workspace $workspace3
bindsym $mod+Shift+4 move container to workspace $workspace4
bindsym $mod+Shift+5 move container to workspace $workspace5
bindsym $mod+Shift+6 move container to workspace $workspace6
bindsym $mod+Shift+7 move container to workspace $workspace7
bindsym $mod+Shift+8 move container to workspace $workspace8
bindsym $mod+Shift+9 move container to workspace $workspace9
bindsym $mod+Shift+0 move container to workspace $workspace10

# moves the current workspace to the second monitor up/down
bindsym $mod+Shift+u exec --no-startup-id i3-msg move workspace to output up
bindsym $mod+Shift+d exec --no-startup-id i3-msg move workspace to output down
bindsym $mod+Shift+l exec --no-startup-id i3-msg move workspace to output left
bindsym $mod+Shift+r exec --no-startup-id i3-msg move workspace to output right

# makes some windows open on specific workspaces
# (the class can be get running `xprop` on the window. Then, you get the second value of the attribute WM_CLASS(STRING).)
assign [class="Firefox" window_type="normal"] $workspace2
assign [class="Google-chrome" window_type="normal"] $workspace3
# because spotify does not work like the other windows, it does not move to where I order it to
for_window [class="Spotify"] move to workspace $workspace1
assign [class="TelegramDesktop" window_type="normal"] $workspace1
assign [class="Slack" window_type="normal"] $workspace6
assign [class="Gnome-calendar" window_type="normal"] $workspace4
assign [class="Gnome-control-center" window_type="normal"] $workspace7

assign [instance="cli_dashboard" window_type="normal"] $workspace10
# reload the configuration file
# bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+e restart

bindsym $mod+z exec --no-startup-id /storage/src/devops/rofi/shutdown.py

# TODO: Since the binding below is not working, trigger the download script
# executed inside the one below each 3 hours to autodownload via a systemd user
# timer.
# Then, call i3lock directly from here (without the shell script wrapper)
# with the last downloaded file.
bindsym $mod+l exec --no-startup-id /storage/src/devops/bin/lock_with_comic.sh

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Resize floating windows to a default size
bindsym $mod+y resize set 1365 px 750 px, move position center

# Make a window sticky or not
bindsym Mod1+s sticky toggle

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)

# Window Colours
# IMPORTANT: "indicator" is the split indicator - the border that shows where the next window will be at
#                         | border | background | text | indicator
  client.focused          $white $white $white $bluesky
  client.focused_inactive $black $black    $palidblue $palidblue
  client.unfocused        $black $black    $palidblue $palidblue
  client.urgent           $black $darkred    $black $blue



bar {
        status_command i3blocks -c ~/.config/i3/i3blocks.top.conf
        font pango: $font_family $font_size
        position top
        workspace_buttons no
        colors {
              separator $palidblue
              background $black
              statusline $white
                                 #border  background text
              focused_workspace  $bluesky $bluesky  $white
              active_workspace   $white $white  $bluesky
              inactive_workspace $black $black $white
              urgent_workspace   $red $red $white
        }
}

bar {
        status_command i3blocks -c ~/.config/i3/i3blocks.bottom.conf
        font pango: $font_family $font_size
        position bottom
        strip_workspace_numbers yes
        colors {
              separator $palidblue
              background $black
              statusline $white
                                 #border  background text
              focused_workspace  $bluesky $bluesky  $white
              active_workspace   $white $white  $bluesky
              inactive_workspace $black $black $white
              urgent_workspace   $red $red $white
        }
}
# Sreen brightness controls
bindsym Mod1+Shift+Up exec xbacklight -inc 20 # increase screen brightness
bindsym Mod1+Shift+Down exec xbacklight -dec 20 # decrease screen brightness

# Media player controls
#
# (Mod1 here is the ALT key)
bindsym Mod1+space exec playerctl play-pause
bindsym Mod1+Right exec playerctl next
bindsym Mod1+Left exec playerctl previous
# Pulse Audio controls
bindsym Mod1+Up exec --no-startup-id pactl set-sink-volume 0 +5% #increase sound volume
bindsym Mod1+Down exec --no-startup-id pactl set-sink-volume 0 -5% #decrease sound volume
bindsym Mod1+Shift exec --no-startup-id pactl set-sink-mute 0 toggle # mute sound

# -- MY CUSTOMIZATIONS BELOW --

# --- WINDOW BORDERS ---
for_window [class=".*"] border pixel 1
focus_follows_mouse no

# --- SCRATCHPAD ---
bindsym $mod+Shift+BackSpace move scratchpad
bindsym $mod+BackSpace scratchpad show move position center

# --- FLOATING MODE WINDOWS CONFIGURATION ---
for_window [class="MPlayer"] floating enable border pixel 1
for_window [class="Pavucontrol"] floating enable border pixel 4 resize set 640 480 move position center
for_window [class="Arandr"] floating enable enable border pixel 4 resize set 800 600 move position center
for_window [instance="ranger"] floating disable border pixel 1
for_window [instance="tiagoprnl"] floating enable border pixel 4 resize set 1200 400 move position center
for_window [instance="sxiv"] mark "wallpapers", floating enable border pixel 4 resize set 800 600 move position center
# Below is mpv - the CLI video player
for_window [class="mpv"] floating enable sticky enable border pixel 1 resize set 320 240
# --- POPUPS ALWAYS START IN FLOATING MODE EITHER ---
for_window [window_role="pop-up"] floating enable
for_window [window_role="bubble"] floating enable
for_window [window_role="task_dialog"] floating enable
for_window [window_role="Preferences"] floating enable
for_window [window_type="dialog"] floating enable
for_window [window_type="menu"] floating enable
for_window [title="Open With"] floating enable

# --- WINDOWS WITH SPECIAL BORDERS ---
for_window [class="kitty"] border pixel 1
for_window [class="URxvt"] border pixel 1

# --- CUSTOM SCRATCHPADS ---
for_window [instance="vim"]  mark "vim", move scratchpad
for_window [instance="htop"] mark "htop", move scratchpad
for_window [instance="personal-calendar"] mark "personal-calendar", move scratchpad
bindsym Mod1+h [con_mark="htop"] scratchpad show, resize set 1300 700, move position center
bindsym Mod1+v [con_mark="vim"] scratchpad show, resize set 1000 700, move position center
bindsym Mod1+l [con_mark="personal-calendar"] scratchpad show, resize set 1000 700, move position center

# --- OPEN SOME APPS WITH CUSTOM KEYBOARD SHORTCUTS ---
#
## Cheatsheets
bindsym Mod1+t exec --no-startup-id kitty --name tiagoprnl --hold bash -c 'TERM=screen-256color /storage/src/devops/bin/search_posts_and_trigger_vim_by_file_name.sh'
bindsym Mod1+Shift+t exec --no-startup-id kitty --name tiagoprnl --hold bash -c 'TERM=screen-256color /storage/src/devops/bin/search_posts_and_trigger_vim_by_file_contents.sh'
bindsym $mod+i exec --no-startup-id /storage/src/devops/rofi/vim_shortcuts.py
bindsym $mod+a exec --no-startup-id /storage/src/devops/rofi/i3_cheatsheet.sh

## Others
bindsym Mod1+r exec --no-startup-id "XDG_CURRENT_DESKTOP=GNOME gnome-control-center"
bindsym Mod1+w exec --no-startup-id sxiv -t ~/Wallpapers
bindsym Mod1+f exec --no-startup-id flash_window
bindsym $mod+n exec --no-startup-id "notify-send 'Launching spacefm...' --urgency low; spacefm"
bindsym $mod+b exec --no-startup-id /storage/src/devops/rofi/bookmarks.py
bindsym Mod1+p exec --no-startup-id "notify-send 'Taking screenshot...' --urgency low -t 600; mkdir -p ~/screenshots && flameshot full -p ~/screenshots -d 2000 && /storage/src/devops/bin/countdown.py 2"
bindsym Mod1+Shift+p exec --no-startup-id "notify-send 'Taking screenshot (CTRL+s to save)...' --urgency critical -t 1300; mkdir -p ~/screenshots && flameshot gui -p ~/screenshots -d 2000 && /storage/src/devops/bin/countdown.py 2"
bindsym Mod1+o exec --no-startup-id pavucontrol
# below starts video player
bindsym Mod1+y exec --no-startup-id /storage/src/devops/bin/zenity-video-launcher.sh
# TODO: change below to use my own clipboard manager.
# TODO: remove xsel after I finish.
bindsym Mod1+c exec --no-startup-id clipmenu -i -fn Terminus:size=16 -nb '#002b36' -nf '#839496' -sb '#073642' -sf '#93a1a1'
bindsym $mod+o exec --no-startup-id "notify-send 'Deactivating the compton compositor through /storage/src/devops/bin/toggle_compositor.sh ...' --urgency low; /storage/src/devops/bin/toggle_compositor.sh"
bindsym $mod+m exec --no-startup-id "notify-send 'Configuring monitors with arandr...' --urgency low; arandr && i3-msg reload"
bindsym Mod1+k exec --no-startup-id "/storage/src/devops/rofi/toggle_keyboards.py"
bindsym $mod+w exec --no-startup-id "/storage/src/devops/bin/layout_manager.sh"
bindsym $mod+c exec --no-startup-id "/storage/src/devops/bin/customize_capslock.sh"

# --- APPLICATIONS THAT AUTOSTART WITH i3 ---
exec --no-startup-id nm-applet
# Disabled xautolock due to the fact that it triggers the screensaver even if
# it is active. Maybe a better solution would be to use a systemd timer
# to trigger the lock script after some time of inactivity.
# exec --no-startup-id  xautolock -detectsleep -time 1 \
#   -locker "/storage/src/devops/bin/lock_with_comic.sh" \
#   -notify 30 \
#   -notifier "notify-send -u critical -t 10000 -- 'locking screen in 30 seconds'";
exec_always --no-startup-id compton --config ~/compton.conf
# exec --no-startup-id "notify-send 'Launching conky...' --urgency low; ~/.Conky/startconky.sh"
exec_always --no-startup-id "notify-send 'Activating keyboard backlight...' --urgency low; /storage/src/devops/bin/keyboard-backlight.sh"
exec_always --no-startup-id "cd /storage/src/devops/bin/battery_wallpaper && ./battery_wall.py"
exec_always --no-startup-id flashfocus
exec --no-startup-id "notify-send 'Launching telegram...' --urgency low; /opt/telegram/Telegram/Telegram"
exec --no-startup-id "notify-send 'Launching spotify...' --urgency low; spotify"
exec --no-startup-id "notify-send 'Launching bluetooth manager applet (blueman)...' --urgency low; blueman-applet"
exec --no-startup-id "notify-send 'Configuring monitors with xrandr...' --urgency low; /storage/src/devops/bin/monitors.sh"
exec --no-startup-id "notify-send 'Launching Gnome Calendar...' --urgency low; gnome-calendar"
exec --no-startup-id "notify-send 'Launching Gnome Weather...' --urgency low; gnome-weather"
# TODO: change below to the clippy daemon
exec --no-startup-id CM_DEBUG=1 clipmenud > /tmp/clipmenud.log &
# exec --no-startup-id /storage/src/devops/bin/start_clipboard_polling.sh
# exec --no-startup-id /storage/src/devops/bin/i3-htop.sh
exec --no-startup-id /storage/src/devops/bin/i3-vim.sh
exec --no-startup-id /storage/src/devops/bin/i3-personal-calendar.sh
exec --no-startup-id /storage/src/devops/bin/i3-dashboard.sh
exec --no-startup-id "notify-send 'Activating i3 alternating layouts ...' --urgency low; /storage/src/devops/bin/i3-alternating-layouts.sh"
exec --no-startup-id "arandr && /storage/src/devops/bin/i3_change_wallpaper.sh"
